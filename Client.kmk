PLINK ?= $(PATH_INS)/bin/postlink
OBJC1 ?= $(PATH_INS)/bin/objc1
TAR ?= tar
GIT ?= git
NM ?= nm
DOCMK = $(ASH) util/mkdoc.ksh
BOOTMK = $(ASH) util/mkboot.ksh
PKGNAME ?= JXObjC-$(KBUILD_TARGET)_$(KBUILD_TARGET_ARCH).tar.gz
PKGDIRS = lib bin include

BLUE = \e[1;34m
RED = \e[1;31m
NORMAL = \033[0m

DATEFMT = %Y-%m-%dT%H:%M:%S

updatePLink: install
	$(NM) $(OBJC1) | $(PLINK) > util/_objc1.c
	$(NM) $(PLINK) | $(PLINK) > util/_plink.c


bootDist: updatePLink
	$(BOOTMK)

package: install
	$(TAR) -C $(PATH_INS) -cvzf $(PKGNAME) $(PKGDIRS)
	@$(PRINTF) "$(BLUE)Packaged binary distribution for target $(KBUILD_TARGET).\n"
	@$(PRINTF) "$(BLUE)Packaging completed at: $(RED)$(date $(DATEFMT)).$(NORMAL)\n"
	@$(PRINTF) "$(BLUE)Package: $(RED)$(PKGNAME)$(NORMAL)\n"

docs:
	$(DOCMK)

cleandoc:
	rm -rf doc/Runtime doc/ObjectKit

bootstrap1: BootDist/build.sh
	cd BootDist && $(ASH) ./build.sh
	@$(PRINTF) "$(BLUE)Stage 1 bootstrap completed for target $(KBUILD_TARGET).\n"
	@$(PRINTF) "$(BLUE)Stage 1 bootstrap completed at: $(RED)$(date $(DATEFMT)).$(NORMAL)\n"

bootstrap2: BootDist/bin/objc1
	$(eval OBJCDIR = $(PATH_BOOT))
	$(eval export OBJCDIR)
	$(MAKE) $(MAKEFLAGS) install
	@$(PRINTF) "$(BLUE)Stage 2 bootstrap completed for target $(KBUILD_TARGET).\n"
	@$(PRINTF) "$(BLUE)Stage 2 bootstrap completed at: $(RED)$(date $(DATEFMT)).$(NORMAL)\n"

bootstrap3:
	$(eval OBJCDIR = $(PATH_INS))
	$(eval export OBJCDIR)
	$(MAKE) $(MAKEFLAGS) install
	@$(PRINTF) "$(BLUE)Stage 3 bootstrap completed for target $(KBUILD_TARGET).\n"
	@$(PRINTF) "$(BLUE)Stage 3 bootstrap completed at: $(RED)$(date $(DATEFMT))$(NORMAL).\n"
	@$(PRINTF) "$(BLUE)You may now run $(RED)`kmk package`$(BLUE) and "
	@$(PRINTF) "install the produced package.$(NORMAL)\n"

format:
	$(ASH) util/format.ksh

commit: clean cleandoc
	$(BOOTMK)
	$(ASH) util/format.ksh
	-cd BootDist; $(GIT) add .; git commit -m"Distribution for commit on date $(date $(DATEFMT))";
	$(GIT) add .
	$(GIT) commit;

amendCommit: clean cleandoc
	$(BOOTMK)
	$(ASH) util/format.ksh
	-cd BootDist; $(GIT) add . ; git commit --amend -m"Distribution for commit on date $(date $(DATEFMT))";
	$(GIT) add .
	$(GIT) commit --amend;

push:
	git push --recurse-submodules=on-demand

forcePush:
	cd BootDist; git push -f;
	git push --recurse-submodules=on-demand --force
